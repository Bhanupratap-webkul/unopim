name: Playwright Tests

on: [push, pull_request]

permissions:
  contents: read

jobs:
  playwright_tests:
    name: Playwright End-to-end UI Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: unopim
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: curl, fileinfo, gd, intl, mbstring, openssl, pdo, pdo_mysql, tokenizer, zip
          ini-values: error_reporting=E_ALL
          tools: composer:v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Set up .env
        run: |
          cp .env.example .env
          sed -i "s|^\(APP_ENV=\).*|\1testing|" .env
          sed -i "s|^\(DB_HOST=\).*|\1127.0.0.1|" .env
          sed -i "s|^\(DB_PORT=\).*|\13306|" .env
          sed -i "s|^\(DB_DATABASE=\).*|\1unopim|" .env
          sed -i "s|^\(DB_USERNAME=\).*|\1root|" .env
          sed -i "s|^\(DB_PASSWORD=\).*|\1root|" .env
          cat .env

      - name: Run UnoPim Install (migrate & seed)
        run: |
          php artisan unopim:install --skip-env-check --skip-admin-creation
          php artisan migrate:fresh --seed --force

      - name: Start PHP Server in Background
        run: nohup php artisan serve --host=0.0.0.0 --port=8000 > storage/logs/server.log 2>&1 &

      - name: Wait for UnoPim to start
        run: |
          for i in {1..30}; do
            if nc -z 127.0.0.1 8000; then
              echo "UnoPim is up!"
              exit 0
            fi
            echo "Waiting for UnoPim to be ready..."
            sleep 2
          done
          echo "UnoPim did not start in time." >&2
          exit 1

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: tests/e2e-pw/package-lock.json

      - name: Install Playwright dependencies
        working-directory: tests/e2e-pw
        run: npm ci --prefer-offline --no-audit

      - name: Install Playwright Browsers
        working-directory: tests/e2e-pw
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: tests/e2e-pw
        run: npx playwright test

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: tests/e2e-pw/playwright-report
