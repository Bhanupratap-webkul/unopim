name: Playwright Tests

on: [push, pull_request]

permissions:
  contents: read

jobs:
  playwright_tests:
    name: Playwright End-to-end UI Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: unopim
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Cache Composer deps
      - name: Cache Composer
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: curl, fileinfo, gd, intl, mbstring, openssl, pdo, pdo_mysql, tokenizer, zip
          ini-values: error_reporting=E_ALL
          tools: composer:v2

      - name: Composer Install
        run: composer install --no-interaction --prefer-dist --optimize-autoloader --no-progress

      - name: Setup .env
        run: |
          cp .env.example .env
          sed -i "s|APP_ENV=.*|APP_ENV=testing|" .env
          sed -i "s|DB_HOST=.*|DB_HOST=127.0.0.1|" .env
          sed -i "s|DB_PORT=.*|DB_PORT=${{ job.services.mysql.ports['3306'] }}|" .env
          sed -i "s|DB_DATABASE=.*|DB_DATABASE=unopim|" .env
          sed -i "s|DB_USERNAME=.*|DB_USERNAME=root|" .env
          sed -i "s|DB_PASSWORD=.*|DB_PASSWORD=root|" .env

      - name: Install UnoPim + DB
        run: |
          php artisan unopim:install --skip-env-check --skip-admin-creation
          php artisan migrate:fresh --seed
          nohup php artisan serve --host=0.0.0.0 --port=8000 &

      - name: Wait for app
        run: npx wait-on http://localhost:8000

      # Setup Node with npm cache
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: tests/e2e-pw/package-lock.json

      # Cache Playwright browser binaries (big speedup)
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('tests/e2e-pw/package-lock.json') }}
          restore-keys: ${{ runner.os }}-playwright-

      - name: Install Playwright deps and run tests (sequential + verbose)
        env:
          CI: true
          FORCE_COLOR: '1'
        run: |
          cd tests/e2e-pw
          npm ci --no-audit --no-fund
          npx playwright install --with-deps
          # Sequential execution + visible reporter (no dot output)
          npx playwright test --workers=1 --reporter=list

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.run_id }}
          path: |
            tests/e2e-pw/playwright-report
            tests/e2e-pw/test-results
            storage/logs/laravel.log
          retention-days: 1
