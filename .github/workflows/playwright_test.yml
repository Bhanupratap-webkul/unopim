name: Playwright Tests

on: [push, pull_request]

permissions:
  contents: read

jobs:
  playwright_tests:
    name: Playwright End-to-end UI Test
    runs-on: ubuntu-latest
    timeout-minutes: 60

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: unopim
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: curl, fileinfo, gd, intl, mbstring, openssl, pdo, pdo_mysql, tokenizer, zip
          ini-values: error_reporting=E_ALL
          tools: composer:v2

      - name: Composer Install
        run: composer install

      - name: Configure Environment
        run: |
          cp .env.example .env
          sed -i "s|^APP_ENV=.*|APP_ENV=testing|" .env
          sed -i "s|^DB_HOST=.*|DB_HOST=127.0.0.1|" .env
          sed -i "s|^DB_PORT=.*|DB_PORT=3306|" .env
          sed -i "s|^DB_DATABASE=.*|DB_DATABASE=unopim|" .env
          sed -i "s|^DB_USERNAME=.*|DB_USERNAME=root|" .env
          sed -i "s|^DB_PASSWORD=.*|DB_PASSWORD=root|" .env
          cat .env

      - name: Run UnoPim Installer & Start Server
        run: |
          php artisan unopim:install --skip-env-check --skip-admin-creation
          php artisan migrate:fresh --seed --force
          php artisan serve --host=0.0.0.0 --port=8000 > server.log 2>&1 &
          echo "Waiting for UnoPim to be ready..."
          timeout 60 bash -c 'until curl -s http://127.0.0.1:8000 > /dev/null; do sleep 2; done'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Playwright & Run Tests
        working-directory: tests/e2e-pw
        run: |
          npm install
          npx playwright install --with-deps
          npx playwright test --reporter=dot --output=playwright-report || true

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: tests/e2e-pw/playwright-report
          retention-days: 7
