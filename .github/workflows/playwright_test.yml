name: Playwright Tests

on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  playwright_tests:
    name: Playwright End-to-end UI Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        php-version: ['8.2']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: unopim
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: curl, fileinfo, gd, intl, mbstring, openssl, pdo, pdo_mysql, tokenizer, zip
          ini-values: error_reporting=E_ALL
          tools: composer:v2

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Set up environment
        run: |
          cp .env.example .env
          sed -i "s|^APP_ENV=.*$|APP_ENV=testing|" .env
          sed -i "s|^DB_HOST=.*$|DB_HOST=127.0.0.1|" .env
          sed -i "s|^DB_PORT=.*$|DB_PORT=${{ job.services.mysql.ports['3306'] }}|" .env
          sed -i "s|^DB_DATABASE=.*$|DB_DATABASE=unopim|" .env
          sed -i "s|^DB_USERNAME=.*$|DB_USERNAME=root|" .env
          sed -i "s|^DB_PASSWORD=.*$|DB_PASSWORD=root|" .env
          cat .env

      - name: Run UnoPim installer and migrations
        run: |
          php artisan unopim:install --skip-env-check --skip-admin-creation
          php artisan migrate --force
          php artisan migrate:fresh --seed
          php artisan serve --host=0.0.0.0 --port=8000 &

      - name: Wait for UnoPim server
        run: npx wait-on http://localhost:8000

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Playwright dependencies and run tests
        run: |
          cd tests/e2e-pw
          npm ci
          npx playwright install --with-deps
          npx playwright test

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: tests/e2e-pw/playwright-report
