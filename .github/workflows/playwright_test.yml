name: Playwright Tests

on: [push, pull_request]

permissions:
  contents: read

jobs:
  playwright_tests:
    name: Playwright End-to-end UI Test
    runs-on: ${{ matrix.operating-systems }}

    strategy:
      matrix:
        operating-systems: [ubuntu-latest]
        php-versions: ['8.2']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: unopim
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: curl, fileinfo, gd, intl, mbstring, openssl, pdo, pdo_mysql, tokenizer, zip
          ini-values: error_reporting=E_ALL
          tools: composer:v2

      - name: Running Composer Install
        run: composer install --no-interaction --prefer-dist --optimize-autoloader --no-progress

      - name: Setting Environment
        run: |
          cp .env.example .env
          sed -i "s|^\(APP_ENV=\s*\).*$|\1testing|" .env
          sed -i "s|^\(DB_HOST=\s*\).*$|\1127.0.0.1|" .env
          sed -i "s|^\(DB_PORT=\s*\).*$|\1${{ job.services.mysql.ports['3306'] }}|" .env
          sed -i "s|^\(DB_DATABASE=\s*\).*$|\1unopim|" .env
          sed -i "s|^\(DB_USERNAME=\s*\).*$|\1root|" .env
          sed -i "s|^\(DB_PASSWORD=\s*\).*$|\1root|" .env
          cat .env

      - name: Running UnoPim Installer
        run: |
          php artisan unopim:install --skip-env-check --skip-admin-creation
          php artisan migrate:fresh --seed
          php artisan serve --host=0.0.0.0 --port=8000 &

      - name: Wait for UnoPim to start
        run: npx wait-on http://localhost:8000

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Playwright dependencies and run test
        env:
          CI: true
          FORCE_COLOR: '1'
        run: |
          cd tests/e2e-pw
          npm ci --no-audit --no-fund
          npx playwright install --with-deps
          # Run sequentially, verbose (no dots)
          npx playwright test --workers=1 --reporter=list

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.shard-index }}-${{ github.run_id }}-${{ github.run_number }}
          path: |
            tests/e2e-pw/playwright-report
            tests/e2e-pw/test-results
            storage/logs/laravel.log
          retention-days: 1
